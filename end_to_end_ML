{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPhYKmvkJEXZXQGDTnN8NWG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":53,"metadata":{"id":"5H8h1FU_Veb1","executionInfo":{"status":"ok","timestamp":1713093297181,"user_tz":-330,"elapsed":433,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["df = pd.read_csv('/content/placement.csv')\n","df.head()"],"metadata":{"id":"2il78BbzVnI5","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1713093298636,"user_tz":-330,"elapsed":1010,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"4112874a-d3e9-400c-accc-9ac561a0b3e4"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  cgpa     iq  placement\n","0           0   6.8  123.0          1\n","1           1   5.9  106.0          0\n","2           2   5.3  121.0          0\n","3           3   7.4  132.0          1\n","4           4   5.8  142.0          0"],"text/html":["\n","  <div id=\"df-f07768ad-c889-41e0-a043-78ba11e976e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>cgpa</th>\n","      <th>iq</th>\n","      <th>placement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>6.8</td>\n","      <td>123.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>106.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>5.3</td>\n","      <td>121.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>7.4</td>\n","      <td>132.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5.8</td>\n","      <td>142.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f07768ad-c889-41e0-a043-78ba11e976e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f07768ad-c889-41e0-a043-78ba11e976e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f07768ad-c889-41e0-a043-78ba11e976e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-36f38e93-5c0d-4e99-8e1f-a90fa65c9e56\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-36f38e93-5c0d-4e99-8e1f-a90fa65c9e56')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-36f38e93-5c0d-4e99-8e1f-a90fa65c9e56 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          83,\n          53,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cgpa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1436336737775692,\n        \"min\": 3.3,\n        \"max\": 8.5,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          6.3,\n          4.4,\n          5.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iq\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.944198451076595,\n        \"min\": 37.0,\n        \"max\": 233.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          91.0,\n          123.0,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"placement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["# Steps\n","\n","# 0. Preprocessing + EDA + feature Selection\n","# 1. Extract input and output cols\n","# 2. Scale the values\n","# 3. Train test split\n","# 4. Train the model\n","# 5. Evaluate the model / model selection\n","# 6. Deploy the model"],"metadata":{"id":"nHk2pkbKYjLz","executionInfo":{"status":"ok","timestamp":1713093298636,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["# Preprocessing: Drop the column 'Unnamed: 0'\n","df.drop(columns = 'Unnamed: 0', inplace = True)"],"metadata":{"id":"YiEcgG1wXowG","executionInfo":{"status":"ok","timestamp":1713093298637,"user_tz":-330,"elapsed":33,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6e0XOWooYL-F","executionInfo":{"status":"ok","timestamp":1713093298637,"user_tz":-330,"elapsed":32,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"5234a9eb-d1d4-4128-b103-78b10c1328eb"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   cgpa     iq  placement\n","0   6.8  123.0          1\n","1   5.9  106.0          0\n","2   5.3  121.0          0\n","3   7.4  132.0          1\n","4   5.8  142.0          0"],"text/html":["\n","  <div id=\"df-b544c392-b876-4e5a-bf5c-9a5e209d4470\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cgpa</th>\n","      <th>iq</th>\n","      <th>placement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.8</td>\n","      <td>123.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.9</td>\n","      <td>106.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5.3</td>\n","      <td>121.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.4</td>\n","      <td>132.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.8</td>\n","      <td>142.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b544c392-b876-4e5a-bf5c-9a5e209d4470')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b544c392-b876-4e5a-bf5c-9a5e209d4470 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b544c392-b876-4e5a-bf5c-9a5e209d4470');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bf000015-6337-4737-b394-360afd5e8e3e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf000015-6337-4737-b394-360afd5e8e3e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bf000015-6337-4737-b394-360afd5e8e3e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"cgpa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1436336737775692,\n        \"min\": 3.3,\n        \"max\": 8.5,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          6.3,\n          4.4,\n          5.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iq\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.944198451076595,\n        \"min\": 37.0,\n        \"max\": 233.0,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          91.0,\n          123.0,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"placement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LDfds764YU8S","executionInfo":{"status":"ok","timestamp":1713093298637,"user_tz":-330,"elapsed":30,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"44707876-116f-4089-859d-d5d9c027536e"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100, 3)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["df.info()\n","# no null values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7nVFSztYdSb","executionInfo":{"status":"ok","timestamp":1713093298638,"user_tz":-330,"elapsed":29,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"f99e2966-4a29-4976-90cf-1b6729d24289"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 3 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   cgpa       100 non-null    float64\n"," 1   iq         100 non-null    float64\n"," 2   placement  100 non-null    int64  \n","dtypes: float64(2), int64(1)\n","memory usage: 2.5 KB\n"]}]},{"cell_type":"code","source":["# EDA\n","import matplotlib.pyplot as plt\n","plt.scatter(df['cgpa'], df['placement'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"6UCohtGzaepb","executionInfo":{"status":"ok","timestamp":1713093298638,"user_tz":-330,"elapsed":27,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"a598de1c-04b8-4ed7-aec0-90a7a0b84c91"},"execution_count":60,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Feature selection:\n","# In our dataset there are only two features\n","# As we can see below, the corr between placement and cgpa is very high and positive\n","# So we can consider cgpa to train our model\n","# And the corr between placement and iq is very low, it signifies that placement is not dependent on iq\n","# So we are not going to take this feature to train our model\n","df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"j3-F-Fd4a4Os","executionInfo":{"status":"ok","timestamp":1713093298639,"user_tz":-330,"elapsed":26,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"a48e3f02-edd8-4ef6-b86c-31b247e5f255"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               cgpa        iq  placement\n","cgpa       1.000000 -0.098791   0.821688\n","iq        -0.098791  1.000000  -0.083031\n","placement  0.821688 -0.083031   1.000000"],"text/html":["\n","  <div id=\"df-29861fab-9f06-4527-a1ba-2cc50707226a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cgpa</th>\n","      <th>iq</th>\n","      <th>placement</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>cgpa</th>\n","      <td>1.000000</td>\n","      <td>-0.098791</td>\n","      <td>0.821688</td>\n","    </tr>\n","    <tr>\n","      <th>iq</th>\n","      <td>-0.098791</td>\n","      <td>1.000000</td>\n","      <td>-0.083031</td>\n","    </tr>\n","    <tr>\n","      <th>placement</th>\n","      <td>0.821688</td>\n","      <td>-0.083031</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29861fab-9f06-4527-a1ba-2cc50707226a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-29861fab-9f06-4527-a1ba-2cc50707226a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-29861fab-9f06-4527-a1ba-2cc50707226a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-067899fe-2852-487c-8bad-917d38597562\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-067899fe-2852-487c-8bad-917d38597562')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-067899fe-2852-487c-8bad-917d38597562 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"cgpa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5896916530298896,\n        \"min\": -0.0987906720582115,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          -0.0987906720582115,\n          0.8216882545644004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iq\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6298870824360571,\n        \"min\": -0.0987906720582115,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -0.0987906720582115,\n          1.0,\n          -0.08303145184944882\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"placement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5806992841148473,\n        \"min\": -0.08303145184944882,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8216882545644004,\n          -0.08303145184944882,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["# Extract input and output cols\n","X = df['cgpa']\n","y = df['placement']"],"metadata":{"id":"k24lhC92bjPM","executionInfo":{"status":"ok","timestamp":1713093298640,"user_tz":-330,"elapsed":26,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["# Train test split\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state= 1)"],"metadata":{"id":"186yVNHCdKUC","executionInfo":{"status":"ok","timestamp":1713093299864,"user_tz":-330,"elapsed":1250,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_v6vqygBdVeS","executionInfo":{"status":"ok","timestamp":1713093299868,"user_tz":-330,"elapsed":1254,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"1f34c858-8706-4ff9-a4ce-d609694af1c9"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["92    5.2\n","39    4.6\n","56    6.1\n","52    7.0\n","51    4.8\n","Name: cgpa, dtype: float64"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["# Scaling\n","from sklearn.preprocessing import StandardScaler\n","scale = StandardScaler()"],"metadata":{"id":"RQz8xI6fdYrV","executionInfo":{"status":"ok","timestamp":1713093299869,"user_tz":-330,"elapsed":37,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["X_train = scale.fit_transform(np.array(X_train).reshape(-1, 1))"],"metadata":{"id":"QJqbRM-TiaPr","executionInfo":{"status":"ok","timestamp":1713093299870,"user_tz":-330,"elapsed":38,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["X_test = scale.transform(np.array(X_test).reshape(-1, 1))"],"metadata":{"id":"P4ja0uE9i6_5","executionInfo":{"status":"ok","timestamp":1713093299870,"user_tz":-330,"elapsed":37,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["# Train the model\n","from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"znciVlKjhjqv","executionInfo":{"status":"ok","timestamp":1713093299871,"user_tz":-330,"elapsed":38,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["clf = LogisticRegression()"],"metadata":{"id":"bQjTY_rCqBwc","executionInfo":{"status":"ok","timestamp":1713093299871,"user_tz":-330,"elapsed":37,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"copNnLjjRtAU","executionInfo":{"status":"ok","timestamp":1713093299872,"user_tz":-330,"elapsed":36,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"344b91c8-fee6-4cdf-d68d-04be909d0a31"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["y_pred = clf.predict(X_test)"],"metadata":{"id":"Lw2mQj7PSula","executionInfo":{"status":"ok","timestamp":1713093299872,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["# Evaluate the model\n","from sklearn.metrics import accuracy_score"],"metadata":{"id":"_3XP5QTpSN1U","executionInfo":{"status":"ok","timestamp":1713093299872,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["accuracy = accuracy_score(y_test, y_pred)"],"metadata":{"id":"bu9zIe7QSNvZ","executionInfo":{"status":"ok","timestamp":1713093299873,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["accuracy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bF8P74CSNpS","executionInfo":{"status":"ok","timestamp":1713093299873,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"8adb99e9-16d7-47f0-acf4-aed5b1909e22"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U3OC0O_6SNhg","executionInfo":{"status":"ok","timestamp":1713093299873,"user_tz":-330,"elapsed":32,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"f2afad02-de3c-4732-a8bb-60ab295b04ae"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["80    0\n","84    0\n","33    0\n","81    0\n","93    1\n","17    0\n","36    0\n","82    1\n","69    1\n","65    1\n","Name: placement, dtype: int64"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z7XGGxEASNO0","executionInfo":{"status":"ok","timestamp":1713093299874,"user_tz":-330,"elapsed":31,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"78c21e52-f72e-4b46-d926-840dcb5d7896"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, 0, 1, 0, 0, 1, 1, 1])"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["# Deploy the model\n","import pickle"],"metadata":{"id":"1k9ikW7xTxLb","executionInfo":{"status":"ok","timestamp":1713093364949,"user_tz":-330,"elapsed":4,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["pickle.dump(clf, open('model.pkl', 'wb'))"],"metadata":{"id":"ITIx4xqQTwv5","executionInfo":{"status":"ok","timestamp":1713093403569,"user_tz":-330,"elapsed":439,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_fjP3P6qU-eW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vfQrYltfUw7v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from mlxtend.plotting import plot_decision_regions"],"metadata":{"id":"90Ug5v8wTxRI","executionInfo":{"status":"ok","timestamp":1713093299874,"user_tz":-330,"elapsed":29,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["plot_decision_regions(X_train, y_train.values, clf = clf, legend = 2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"LjY4et95TxNN","executionInfo":{"status":"ok","timestamp":1713093299874,"user_tz":-330,"elapsed":28,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"373bf54b-e3d6-4a55-efd4-3737278f9e09"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":78},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"97XYaWopUw4Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"qacLuFvwUw1D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"408V6RFSQVXX","executionInfo":{"status":"ok","timestamp":1713093299875,"user_tz":-330,"elapsed":26,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["sns.heatmap(df.corr(), cmap = 'YlGnBu', annot = True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"fD-3Vm0uQqk4","executionInfo":{"status":"ok","timestamp":1713093300852,"user_tz":-330,"elapsed":1002,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"e0aa6623-83c0-4fe6-dab9-d8dd1d930930"},"execution_count":80,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df1 = pd.read_csv('/content/placement.csv', usecols= ['cgpa', 'iq', 'placement'], chunksize= 60)"],"metadata":{"id":"3udgIo5rQwAX","executionInfo":{"status":"ok","timestamp":1713096478751,"user_tz":-330,"elapsed":401,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":139,"outputs":[]},{"cell_type":"code","source":["for chunk in df1:\n","  print(chunk.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7ue3i80YIMG","executionInfo":{"status":"ok","timestamp":1713096479895,"user_tz":-330,"elapsed":12,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}},"outputId":"bdf616f2-d250-4e20-8ce3-fbb4a52a90dd"},"execution_count":140,"outputs":[{"output_type":"stream","name":"stdout","text":["(60, 3)\n","(40, 3)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"OBALjRoof_hs","executionInfo":{"status":"ok","timestamp":1713096453584,"user_tz":-330,"elapsed":409,"user":{"displayName":"Abhay UV Tech","userId":"17771865863563567950"}}},"execution_count":134,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"MJHVjk1dgT0o"},"execution_count":null,"outputs":[]}]}